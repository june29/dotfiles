module.exports =
class Tether {
  constructor ({portal}) {
    portal.onDidSwitchTabs(() => this.delegate.updateActivePositions(this.getActivePositions()))
  }

  // TODO: eventually, this should become addEditorProxy and should be called from Portal.
  setEditorProxy (editorProxy) {
    this.editorProxy = editorProxy
    this.editorProxy.onUpdatePositions(() => this.delegate.updateActivePositions(this.getActivePositions()))
  }

  follow () {

  }

  unfollow () {

  }

  getActivePositions () {
    for (const siteId of this.getActiveSiteIds()) {
      const leaderSiteId = this.resolveLeaderSiteId(siteId)
      const followState = this.resolveFollowState(siteId)
      if (followState === FollowState.RETRACTED) {
        const editorProxy = this.portal.activeEditorProxyForSiteId(leaderSiteId)
        const position = editorProxy.cursorPositionForSiteId(leaderSiteId)
        return {editorProxy, position}
      } else {
        const editorProxy = this.portal.activeEditorProxyForSiteId(siteId)
        const position = editorProxy.cursorPositionForSiteId(siteId)
        return {editorProxy, position}
      }
    }
  }

  resolveLeaderSiteId () {

  }

  resolveFollowState () {

  }

  siteDidDisconnect () {

  }
}
